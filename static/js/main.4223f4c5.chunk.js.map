{"version":3,"sources":["Main/logo.svg","HelloWorld/HelloWorld.js","ArraySorter/Element.js","ArraySorter/ArraySorter.js","Main/Home.js","Main/App.js","Main/serviceWorker.js","index.js"],"names":["module","exports","HelloWorld","Element","props","state","hover","min","max","Math","floor","random","this","setState","height","className","style","width","x","background","React","Component","ArraySorter","myRefs","data","listOfRectangles","num","editable","timer","name","display","float","disabled","onClick","selectionSort","removeFirst","clear","plus","placeholder","value","onChange","evt","updateNum","type","target","i","push","update","length","setInterval","selectTick","len","abort","k","deselect","select","j","change","clearInterval","milliseconds","start","Date","getTime","pop","y","el","array","randomNum","ref","includes","console","log","Home","src","logo","alt","Navigation","Style","to","App","Main","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4223f4c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\"\nfunction HelloWorld()\n{\n    return (\n        <div>\n           <h1>HELLO WORLD!</h1>\n        </div>\n    );\n}\nexport default HelloWorld;","import React from \"react\"\nimport \"./ArrayStyle.css\";\n\nclass Element extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            hover: false\n        }\n\n    }\n    randomNum(min, max)\n    {\n        return Math.floor((Math.random() * max) + min);\n    }\n    select()\n    {\n        this.setState({\n            hover: true\n        });\n    }\n    deselect()\n    {\n        this.setState({\n            hover: false\n        });\n    }\n    render()\n    {\n        return(\n        <li height={this.props.height}\n            className=\"element\"\n            style={{width: this.props.x, height: this.props.height, ...{background: this.state.hover?'red':''}}}\n        >\n            <span className=\"height-text\">{this.props.height}</span>\n        </li>\n        );\n    }\n}\nexport default Element;","import React from \"react\"\nimport Element from \"./Element.js\"\nimport \"./ArrayStyle.css\";\n\nclass ArraySorter extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.myRefs = [];\n        this.state = {\n            data: this.listOfRectangles(5, 600, 5),\n            num: 5\n        };\n        this.editable = true;\n        this.timer = null;\n\n    }\n    render()\n    {\n        return(\n        <div>\n            <ul className=\"arrayContainer\">\n                {this.state.data}\n            </ul>\n            <div name=\"manipulations\" style={{display: \"block\", float: \"left\"}}>\n                <button className=\"button\" disabled={this.editable?false:true} onClick={() => this.selectionSort()}>Selection Sort</button>\n                <button className=\"button\" disabled={this.editable?false:true} onClick={() => this.removeFirst()}>Remove first</button>\n                <button className=\"button\" disabled={this.editable?false:true} onClick={() => this.clear()}>Clear</button>\n            </div>\n            <br/><br/><br/><br/><br/>\n            <div style={{display: \"block\", float: \"left\"}}>\n                <button className=\"button\" onClick={() => this.plus()}>Add a Rectangle</button>\n\n                <button className=\"button\" onClick={() => this.plus(this.state.num)}>Add __ Rectangles</button>\n                <input placeholder=\"5\" name=\"num\" value={this.state.num} onChange={evt => this.updateNum(evt)} className=\"button\" type=\"number\"/>\n            </div>\n\n        </div>);\n    }\n    updateNum(evt)\n    {\n        this.setState({\n            num: evt.target.value\n        });\n    }\n    plus(num=1)\n    {\n        for(let i = 0; i < num; i++)\n            this.state.data.push(this.listOfRectangles(5,600,1)[0]);\n        this.update();\n    }\n    update()\n    {\n        this.setState({\n            data: this.state.data\n        });\n        if(this.state.data.length < 1)\n            this.editable = false;\n        else\n            this.editable = true;\n    }\n    selectionSort()\n    {\n\n        this.timer = setInterval(() => {this.selectTick(); }, 500);\n    }\n    selectTick()\n    {\n        let len = this.state.data.length;\n        let abort = false;\n        for (let i = 0; i < len && !abort; i++) {\n            let min = i;\n\n            for(let k = 0; k < i; k++)\n                this.myRefs[k].deselect();\n\n            this.myRefs[i].select();\n            for (let j = i + 1; j < len; j++)\n            {\n                if (this.state.data[min].props.height > this.state.data[j].props.height)\n                {\n                    min = j;\n                    abort = true;\n                }\n            }\n            if(i != min)\n                this.change(i, min);\n            if(i >= len-1)\n            {\n                this.myRefs[i].deselect();\n                clearInterval(this.timer);\n            }\n        }\n    }\n    sleep(milliseconds)\n    {\n        let start = new Date().getTime();\n        for (let i = 0; i < 1e7; i++)\n        {\n            if ((new Date().getTime() - start) > milliseconds){\n                break;\n            }\n        }\n    }\n    removeFirst()\n    {\n        let len = this.state.data.length;\n        for(let i = 0; i < len-1; i++)\n        {\n            this.state.data[i] = this.state.data[i+1];\n            this.myRefs[i] = this.myRefs[i+1];\n        }\n\n        this.state.data.pop();\n        this.myRefs.pop();\n        this.update();\n    }\n    clear()\n    {\n        this.setState({data: []});\n        this.editable = false;\n        this.myRefs = [];\n    }\n\n    change(x, y)\n    {\n        let el = this.state.data[x];\n        this.state.data[x] = this.state.data[y];\n        this.state.data[y] = el;\n        this.update();\n    }\n\n    listOfRectangles(x, y, num)\n    {\n        let array = [];\n        for(let i = 0; i < num; i++)\n        {\n            let height = this.randomNum(0, y);\n            array.push(\n                <Element\n                    ref={(ref)=>{if(ref!=null && !this.myRefs.includes(ref)){this.myRefs.push(ref)}}}\n                    height={height}\n                    x={x}\n                />\n            );\n        }\n        console.log(this.myRefs);\n        return (array);\n    }\n    randomNum(min, max)\n    {\n        return Math.floor((Math.random() * max) + min);\n    }\n}\n\nexport default ArraySorter;","import React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Home(){\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </header>\n        </div>\n    );\n}\nexport default Home;","import React from 'react';\n\nimport {Switch, Route, NavLink} from \"react-router-dom\"\nimport HelloWorld from '../HelloWorld/HelloWorld.js'\nimport ArraySorter from '../ArraySorter/ArraySorter.js'\nimport Home from './Home.js'\nimport Style from './App.css'\nconst App = () => {\n  return (\n    <span className=\"App\">\n        <Navigation />\n        <Main />\n    </span>\n  );\n}\n\nconst Navigation = () => (\n    <nav>\n        <ul style={Style}>\n            <li style={Style}><NavLink to='/'>Home</NavLink></li>\n            <li><NavLink to='/HelloWorld'>HelloWorld</NavLink></li>\n            <li><NavLink to='/ArraySorter'>ArraySorter</NavLink></li>\n        </ul>\n    </nav>\n);\n\nexport default App;\n\nconst Main = () => {\n    return (\n        <Switch>\n            <Route exact path='/' component={Home}></Route>\n            <Route exact path='/HelloWorld/' component={HelloWorld}></Route>\n            <Route exact path='/ArraySorter/' component={ArraySorter}></Route>\n        </Switch>\n    );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './Main/App';\nimport * as serviceWorker from './Main/serviceWorker';\n\nReactDOM.render(<BrowserRouter> <App /> </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}